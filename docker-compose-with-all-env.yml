## !!!!!!用于docker-compose部署并启动官方镜像!!!!!!
## !!!!!!内置配置的形式启动!!!!!!!!!!!!!!!!!!!!!!!

version: '3'

################## 按需修改好配置
x-tlrtcfile-env: &tlrtcfile-env
  ## api服务端口
  tl_rtc_file_api_port: 9092
  ## websocket服务端口
  tl_rtc_file_socket_port: 8444
  ## websocket服务地址
  tl_rtc_file_socket_host: 127.0.0.1:8444
  ## webrtc-stun中继服务地址
  tl_rtc_file_webrtc_stun_host: stun:127.0.0.1:3478
  ## webrtc-turn中继服务地址
  tl_rtc_file_webrtc_turn_host: turn:127.0.0.1:3478?transport=udp
  ## webrtc中继服务用户名
  tl_rtc_file_webrtc_turn_username: tlrtcfile
  ## webrtc中继服务密码
  tl_rtc_file_webrtc_turn_credential: tlrtcfile
  ## webrtc中继服务Secret
  tl_rtc_file_webrtc_turn_secret: tlrtcfile
  ## webrtc中继服务帐号过期时间 (毫秒)
  tl_rtc_file_webrtc_turn_expire: 86400000
  ## 是否开启数据库
  tl_rtc_file_db_open: true
  ## 数据库地址
  tl_rtc_file_db_mysql_host: mysql
  ## 数据库端口
  tl_rtc_file_db_mysql_port: 3306
  ## 数据库名称
  tl_rtc_file_db_mysql_dbName: webchat
  ## 数据库用户名
  tl_rtc_file_db_mysql_user: tlrtcfile
  ## 数据库密码
  tl_rtc_file_db_mysql_password: tlrtcfile
  ## oss-seafile存储库ID
  tl_rtc_file_oss_seafile_repoid: 
  ## oss-seafile地址
  tl_rtc_file_oss_seafile_host: 
  ## oss-seafile用户名
  tl_rtc_file_oss_seafile_username: 
  ## oss-seafile密码
  tl_rtc_file_oss_seafile_password: 
  ## oss-alyun存储accessKey
  tl_rtc_file_oss_alyun_AccessKey: 
  ## oss-aly存储SecretKey
  tl_rtc_file_oss_alyun_Secretkey: 
  ## oss-aly存储bucket
  tl_rtc_file_oss_alyun_bucket: 
  ## oss-txyun存储accessKey
  tl_rtc_file_oss_txyun_AccessKey: 
  ## oss-txyunt存储SecretKey
  tl_rtc_file_oss_txyun_Secretkey: 
  ## oss-txyun存储bucket
  tl_rtc_file_oss_txyun_bucket: 
  ## oss-qiniuyun存储accessKey
  tl_rtc_file_oss_qiniuyun_AccessKey: 
  ## oss-qiniuyunt存储SecretKey
  tl_rtc_file_oss_qiniuyun_Secretkey: 
  ## oss-qiniuyun存储bucket
  tl_rtc_file_oss_qiniuyun_bucket: 
  ## 管理后台房间号
  tl_rtc_file_manage_room: tlrtcfile
  ## 管理后台密码
  tl_rtc_file_manage_password: tlrtcfile
  ## openai-key，如果有多个key，逗号分隔
  tl_rtc_file_openai_keys: 
  ## 企业微信通知开关
  tl_rtc_file_notify_open: false
  ## 企业微信通知机器人KEY，正常通知，如果有多个key，逗号分隔
  tl_rtc_file_notify_qiwei_normal: 
  ## 企业微信通知机器人KEY，错误通知，如果有多个key，逗号分隔
  tl_rtc_file_notify_qiwei_error: 


services:

  #http模式启动api服务
  api-http:
    profiles: ['http']
    image: iamtsm/tl-rtc-file-api
    container_name: api
    environment:
      <<: *tlrtcfile-env
      tl_rtc_file_env_mode: http
    command: 
      - tlapi
    ports:
      - 9092:9092
    links:
      - mysql
    depends_on:
      - mysql
      - coturn

  #https模式启动api服务
  api-https:
    profiles: ['https']
    image: iamtsm/tl-rtc-file-api
    container_name: api
    environment:
      <<: *tlrtcfile-env
      tl_rtc_file_env_mode: https
    command: 
      - tlapi
    ports:
      - 9092:9092
    links:
      - mysql
    depends_on:
      - mysql
      - coturn

  #http模式启动socket服务
  socket-http:
    profiles: ['http']
    image: iamtsm/tl-rtc-file-socket
    container_name: socket
    command: 
      - tlsocket
    environment:
      <<: *tlrtcfile-env
      tl_rtc_file_env_mode: http
    ports:
      - 8444:8444
    links:
      - mysql
    depends_on:
      - mysql
      - coturn

  #https模式启动socket服务
  socket-https:
    profiles: ['https']
    image: iamtsm/tl-rtc-file-socket
    container_name: socket
    command: 
      - tlsocket
    environment:
      <<: *tlrtcfile-env
      tl_rtc_file_env_mode: https
    ports:
      - 8444:8444
    links:
      - mysql
    depends_on:
      - mysql
      - coturn

  #mysql服务
  mysql:
    profiles: ['http','https']
    image: iamtsm/tl-rtc-file-mysql
    container_name: mysql
    restart: always
    environment:
      #设置root密码
      MYSQL_ROOT_PASSWORD: tlrtcfile
      #设置数据库
      MYSQL_DATABASE: webchat
      #设置用户
      MYSQL_USER: tlrtcfile
      #设置用户密码
      MYSQL_PASSWORD: tlrtcfile
    ports:
      - 3306:3306
    volumes:
      - ./db:/var/lib/mysql
      - ./my.cnf:/etc/mysql/conf.d/my.cnf
      - ./log:/var/log/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql

  #coturn服务
  coturn:
    profiles: ['http','https']
    image: iamtsm/tl-rtc-file-coturn
    container_name: coturn
    ports:
      - "3478:3478/udp"
      - "3478:3478/tcp"
    volumes:
      - ./turnserver-with-secret-user.conf:/etc/turnserver.conf